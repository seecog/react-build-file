{"version":3,"sources":["logo.svg","Components/navigation/Navigation.js","Components/about/About.js","Components/contact/Contact.js","Components/home/Home.js","Talks.js","Talk.js","App.js","Properties/City.js","Student.js","Properties/Cities.js","School.js","Mohantycondition.js","Mohantylist.js","Mohantystyle.js","Components/Employees/Addemp/Addemp.js","Mycondition2.js","Mycondition.js","Components/Products1/Products1.js","Components/Employees/Employees.js","store/reducers/count.reducer.js","store/reducers/snapshot.reducer.js","Counter1.js","Components/parent/Parent.js","Components/runs/Runs.js","MyFragment.js","MyTimeHOC.js","DisplayTime.js","MyBody.js","MatchHOC.js","MumbaiIndians.js","MyHeader.js","MyTable.js","serviceWorker.js","store/actions.js","store/reducers/runs.reducer.js","store/reducers/results.reducer.js","Usei.jsx","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","linkStyle","color","react_default","a","createElement","react_router_dom","exact","activeStyle","to","About","Contact","Home","Talks","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","talks","_this2","axios","get","then","res","console","log","setState","data","catch","err","map","talk","i","key","id","title","body","Component","Talk","props","match","params","stalk","City","name","pop","src","pic","width","height","area","children","Student","onChange","change","value","firstname","email","Addemp","btn","stt","onClick","update","add","changeage","age","changesal","salary","Ingredient","ParentContext","Consumer","React","createContext","iniCountState","count","countReducer","arguments","length","undefined","action","type","iniSnapshotState","snapshot","snapshotReducer","concat","dt","Date","Counter1","storeCount","onIncr","onAdd","takeSnapshot","storeSnapshot","x","Child1","connect","storeCountReducer","storeSnapshotReducer","dispatch","Parent_Child2","Child2","Parent_ParentContext","Runs","iruns","onIncrement","onDecrement","onTwo","onFour","onSix","onCapture","results","result","time","current","mruns","runs","mresults","val","OriginalComponent","_Component","UpdatedComponent","iniTime","ref","setInterval","ct","cRef","cancelTime","clearInterval","inherits","createClass","cancel","in","MyTimeHOC","MyBody","makeFour","preState","objectSpread","four_runs","total_runs","makeSix","six_runs","four","six","MatchHOC","informations","sal","Fragment","MyHeader","Boolean","window","location","hostname","initialState","runsReducer","resultsReducer","Usei","_useState","useState","_useState2","slicedToArray","posts","updatePost","useEffect","newposts","post","mergeReducer","combineReducers","createStore","ReactDOM","render","src_Usei","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.511d8b7c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './Navigation.css';\r\nconst Navigation = ()=>{\r\n    let linkStyle = {\r\n        color : 'green'\r\n    }\r\n    return (\r\n    <div>\r\n    <NavLink exact activeStyle={linkStyle} to=\"/\">Home </NavLink> | \r\n    <NavLink activeStyle={linkStyle} to=\"/about\">About </NavLink> | \r\n    <NavLink activeStyle={linkStyle} to=\"/contact\">Contact </NavLink>  |\r\n    <NavLink activeStyle={linkStyle} to=\"/talks\">Talks </NavLink> \r\n    </div> \r\n    )\r\n// return (\r\n//     <div>\r\n//     <NavLink exact activeClassName=\"mylink\" to=\"/\">Home </NavLink> | \r\n//     <NavLink activeClassName=\"mylink\" to=\"/about\">About </NavLink> | \r\n//     <NavLink activeClassName=\"mylink\" to=\"/contact\">Contact </NavLink> \r\n//     </div> \r\n// )\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nconst About = ()=>{\r\nreturn (\r\n    <h1>About Page</h1>\r\n)\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\nconst Contact = ()=>{\r\nreturn (\r\n    <h1>Contact Page</h1>\r\n)\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\n\r\nconst Home = ()=>{\r\nreturn (\r\n    <h1>Home Page</h1>\r\n)\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { NavLink } from 'react-router-dom';\r\nclass Talks extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            talks: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(\"https://jsonplaceholder.typicode.com/posts\").then((res) => {\r\n            console.log('The final response is ', res);\r\n            this.setState({\r\n                talks: res.data\r\n            })\r\n        })\r\n            .catch((err) => {\r\n                console.log('The error is ', err);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>List of talks</h1>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Title</th>\r\n                            <th>Body</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.talks.map((talk, i) => {\r\n                                return (\r\n                                    <tr key={i}>\r\n                                        <td>\r\n                                            <NavLink to={\"/talks/\" + talk.id}>\r\n                                                {talk.title}\r\n                                            </NavLink>\r\n                                        </td>\r\n                                        <td>{talk.body}</td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Talks;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nclass Talk extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            title: '',\r\n            body: ''\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        let id = this.props.match.params.id\r\n        console.log('Id is ', id)\r\n        axios.get(\"https://jsonplaceholder.typicode.com/posts/\" + id).then((stalk) => {\r\n            // this.setState({\r\n            //     talk : res.data\r\n            // })\r\n            console.log('>> ', stalk.data);\r\n            this.setState({\r\n                title: stalk.data.title,\r\n                body: stalk.data.body\r\n            })\r\n        })\r\n            .catch((err) => {\r\n                console.log('The error is ', err);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>{this.state.title}</h2>\r\n                <p>\r\n                    {this.state.body}\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Talk;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Navigation from './Components/navigation/Navigation';\nimport About from './Components/about/About'\nimport Contact from './Components/contact/Contact'\nimport Home from './Components/home/Home';\nimport Talks from './Talks';\nimport Talk from './Talk';\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      isLogin : true\n    }\n  }\n  render() {\n    return (\n      // <div className=\"App\">\n      //   <header className=\"App-header\">\n      //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      //     <p>\n      //       Edit <code>src/App.js</code> and save to reload.\n      //     </p>\n      //     <a\n      //       className=\"App-link\"\n      //       href=\"https://reactjs.org\"\n      //       target=\"_blank\"\n      //       rel=\"noopener noreferrer\"\n      //     >\n      //       Learn React\n      //     </a>\n      //   </header>\n      // </div>\n\n      <BrowserRouter>\n        <div>\n          <Navigation />\n          <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/contact\" component={Contact} />\n          <Route path=\"/about\" component={About} />\n          {\n            (this.state.isLogin ? <Route path=\"/talks\" exact component={Talks} /> : null)\n          }\n          <Route path=\"/talksi/:id\" component={Talk} />\n          <Route render={() => <h1>Not found</h1>} />\n          </Switch>\n          {/* <Route path=\"/talks\" exact component={Talks} />\n          <Route path=\"/talks/:id\" component={Talk} /> */}\n\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\n\r\n\r\nconst City = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <h2>{props.name}</h2>\r\n            <p>Population: {props.pop}</p>\r\n            <p>\r\n\r\n                <img src={props.pic} width=\"100\" height=\"100\" />\r\n            </p>\r\n            <p>Area: {props.area}</p>\r\n            <p>\r\n                {props.children}\r\n            </p>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default City;","import React from 'react';\r\n\r\nconst Student = (props)=>{\r\n  return (\r\n    <div>\r\nFirst Name : <input onChange={props.change} value={props.firstname} />[{props.firstname}]<br/>\r\nEmail : <input  value={props.email}/>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Student;","import React, {Component} from 'react';\r\nimport City from './City';\r\nclass Cities extends Component{\r\n\r\n\r\nconstructor(){\r\n    super();\r\n}\r\n\r\nrender(){\r\n    return(\r\n<div>\r\n        <City name=\"Bhubaneswar\" pop=\"10000\" area=\"100\" pic=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTGS79YnZNr78AY1MauhJ2Pg1QSjQ4TuotMu42THATJE8NkrqVu\"/><hr/>\r\n        <City name=\"Bangalore\" pop=\"100000\" area=\"1000\" pic=\"https://i.ytimg.com/vi/YBTDw6Hcu4I/maxresdefault.jpg\" >Testing!!!!!!!!!!!!!</City> <hr/>\r\n    \r\n    \r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default Cities;","import React, { Component } from 'react';\r\nimport Student from './Student';\r\n\r\nclass School extends Component {\r\n\r\n  constructor() {\r\n    super();//invokes parent class constructor\r\n    this.state = {\r\n      first_name: 'Ankit',\r\n      email: 'ankit@gmail.com'\r\n    }\r\n  }\r\n\r\n  nameChange = (evt) => {\r\n    console.log('Chnage the name')\r\n    this.setState({\r\n      first_name: evt.target.value\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Student change={this.nameChange} firstname={this.state.first_name} email={this.state.email} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default School;","import React, { Component } from 'react';\r\n\r\nclass Mohantycondition extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            checked: false\r\n        }\r\n    }\r\n\r\n    toggleContent = () => {\r\n        this.setState({\r\n            checked: !this.state.checked\r\n        })\r\n    }\r\n\r\n    //handle through javscript style\r\n\r\n    render() {\r\n\r\n        let txtcontent = null;\r\n        if (this.state.checked) {\r\n            txtcontent = (\r\n                <div>\r\n                    <h2>Muhammad Ali</h2>\r\n                    <p>\r\n                        Ali was born and raised in Louisville, Kentucky and began training as an amateur boxer at age 12. At 18, he won a gold medal in the light heavyweight division at the 1960 Summer Olympics, and turned professional later that year. He converted to Islam after 1961, and eventually took the name Muhammad Ali. He won the world heavyweight championship from Sonny Liston in a major upset at age 22 in 1964.\r\n\r\n                        In 1966, Ali refused to be drafted into the military, citing his religious beliefs and opposition to the Vietnam War.[6][7] He was arrested, found guilty of draft evasion, and stripped of his boxing titles. He appealed the decision to the Supreme Court, which overturned his conviction in 1971, but he had not fought for nearly four years and lost a period of peak performance as an athlete. His actions as a conscientious objector to the war made him an icon for the larger counterculture generation\r\n                    </p>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            txtcontent = null;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1>Conditon goes here</h1>\r\n                <button onClick={this.toggleContent}>Toggle</button>\r\n                {txtcontent}\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n\r\n    // render() {\r\n    //     return (\r\n    //         <div>\r\n    //             <h2>Apply condition</h2>\r\n    //             <button onClick={this.toggleContent}>Toggle</button>\r\n    //             {this.state.checked ? <h2>Content goes here</h2> : null\r\n\r\n    //             }\r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n\r\n}\r\n\r\nexport default Mohantycondition;","import React, { Component } from 'react';\r\n\r\nclass Mohantylist extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            emps: [\r\n                { name: 'Mohan', age: 21, sal: 300 },\r\n                { name: 'Sohan', age: 22, sal: 250 },\r\n                { name: 'Rohan', age: 23, sal: 200 }\r\n            ]\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>List of Employees</h2>\r\n                <table>\r\n                    <th>Name</th><th>Age</th><th>Salary</th>\r\n                    {\r\n                        this.state.emps.map((emp) => {\r\n                            return (\r\n                                <tr key={emp.name}>\r\n                                    <td>{emp.name}</td><td>{emp.age}</td><td>{emp.sal}</td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n\r\n                    }\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Mohantylist;\r\n","import React, { Component } from 'react';\r\n\r\nexport class Mohantystyle extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      first_name: 'Mohanty',\r\n      age: 22,\r\n      technology: \"Javascript\"\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const style = {\r\n      width: '200px',\r\n      height: '200px',\r\n      border: '1px solid red',\r\n      margin: '10px',\r\n      padding: '10px',\r\n      fontFamily: 'georgia'\r\n    }\r\n    return (\r\n      <div style={style}>\r\n        <h2>{this.state.first_name}</h2>\r\n        <p>\r\n          Age : {this.state.age}\r\n        </p>\r\n        <p>\r\n          Technology : {this.state.technology}\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Mohantystyle;","import React from 'react';\r\n\r\n\r\nconst Addemp = (props)=>{\r\n    let btn = null;\r\n    if(!props.stt){\r\n btn= (\r\n\r\n<button onClick={props.add}>Add Employee</button>\r\n\r\n)\r\n    }\r\n    else{\r\nbtn=(<button onClick={props.update}>Update Employee</button>)\r\n    }\r\nreturn (\r\n    <div>\r\n<p>\r\nName : <input name=\"name\" onChange={props.change} value={props.name}/>\r\n</p>\r\n<p>\r\nAge : <input name=\"age\" onChange = {props.changeage} value={props.age} />\r\n</p>\r\n<p>\r\nSalary : <input name=\"salary\" onChange={props.changesal} value={props.salary} />\r\n</p>\r\n<p>\r\n\r\n{btn}\r\n    </p>\r\n        </div>\r\n)\r\n\r\n}\r\n\r\nexport default Addemp;","import React, { Component } from 'react';\r\n\r\n\r\nclass Mycondition2 extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            checked: true\r\n        }\r\n    }\r\n    toggleContent = () => {\r\n        this.setState({\r\n            checked: !this.state.checked\r\n        });\r\n    }\r\n    render() {\r\n        const myTxt = null;\r\n        if (this.state.checked) {\r\n            myTxt = (\r\n                <div>\r\n                    <h2>This is content</h2>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            myTxt = (\r\n                <div>\r\n                    <h2>No content found</h2>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <h2>Toggle the text content</h2>\r\n                <button onClick={this.toggleContent}>Toggle</button>\r\n                {myTxt}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Mycondition2;","import React, { Component } from 'react';\r\n\r\nclass Mycondition extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            checked: true\r\n        }\r\n    }\r\n    toggleContent = () => {\r\n        this.setState({\r\n            checked: !this.state.checked\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Check for content</h1>\r\n                <button onClick={this.toggleContent}>Toggle</button>\r\n                {\r\n                    this.state.checked ? <div><h2>Telco</h2></div> : null\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Mycondition;","import React, { Component } from 'react';\r\n\r\n\r\nconst Ingredient = () => {\r\n\r\n    return (\r\n        <div>\r\n            Company details are\r\n        <ParentContext.Consumer>\r\n                {(data) => data}\r\n            </ParentContext.Consumer>\r\n        </div>\r\n    )\r\n}\r\nvar ParentContext = React.createContext();\r\nclass Products1 extends Component {\r\n\r\n   \r\n\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            prod: [\r\n                { name: \"Apple\", cost: 100 }\r\n            ],\r\n\r\n            comdetail: [\r\n                { name: \"InfoCampus\", add: \"Marthahalli\" }\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ParentContext.Provider value={this.state.comdetail[0]}>\r\n                    <h1>Inside Parent </h1>\r\n                    <Ingredient />\r\n                </ParentContext.Provider>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Products1;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Addemp from './Addemp/Addemp'\r\nclass Employees extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            employees: [],\r\n            name: '',\r\n            age: '',\r\n            salary: '',\r\n            btn_stt: false,\r\n            edit_id: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getRecords();\r\n    }\r\n\r\n    setFormName = (event) => {\r\n        console.log('Event is ', event.target.value)\r\n        this.setState({\r\n            name: event.target.value\r\n        })\r\n    }\r\n\r\n    setFormAge = (event) => {\r\n        console.log('Event is ', event.target.value)\r\n        this.setState({\r\n            age: event.target.value\r\n        })\r\n    }\r\n\r\n    setFormSalary = (event) => {\r\n        console.log('Event is ', event.target.value)\r\n        this.setState({\r\n            salary: event.target.value\r\n        })\r\n    }\r\n\r\n    getRecords = () => {\r\n        // axios.get(\"http://ec2-13-234-177-24.ap-south-1.compute.amazonaws.com:3000/api/employees\").then((res) => {\r\n        axios.get(\" http://localhost:3001/api/employees\").then((res) => {\r\n            console.log('The list is ==>', res.data)\r\n            this.setState({\r\n                employees: res.data\r\n            })\r\n        })\r\n            .catch((err) => {\r\n                console.log('The error is ', err);\r\n            })\r\n    }\r\n\r\n    deleteRecord = (id) => {\r\n        // axios.delete(\"http://ec2-13-234-177-24.ap-south-1.compute.amazonaws.com:3000/api/employees/\" + id).then((res) => {\r\n        axios.delete(\"http://localhost:3001/api/employees/\" + id).then((res) => {\r\n            console.log('The record deleted')\r\n            this.getRecords();\r\n        })\r\n            .catch((err) => {\r\n                console.log('The error is ', err);\r\n            })\r\n    }\r\n\r\n\r\n    clearField = () => {\r\n        this.setState({\r\n            name: '',\r\n            age: '',\r\n            salary: ''\r\n        })\r\n    }\r\n\r\n    save = () => {\r\n        console.log('The task is ', this.state.name, this.state.age, this.state.salary)\r\n        // axios.post(\"http://ec2-13-234-177-24.ap-south-1.compute.amazonaws.com:3000/api/employees\",{\r\n        axios.post(\"http://localhost:3001/api/employees\", {\r\n\r\n            name: this.state.name,\r\n            age: this.state.age,\r\n            salary: this.state.salary\r\n        }).then((res) => {\r\n            console.log('Record posted');\r\n            this.clearField();\r\n            this.getRecords();\r\n        })\r\n            .catch((err) => {\r\n                console.log('The today error is ', err);\r\n            })\r\n    }\r\n\r\n    editRecord = (obj) => {\r\n        this.setState({\r\n            name: obj.name,\r\n            age: obj.age,\r\n            salary: obj.salary,\r\n            btn_stt: true,\r\n            edit_id: obj._id\r\n        })\r\n    }\r\n\r\n    updateRecord = () => {\r\n        // axios.put(\"http://ec2-13-234-177-24.ap-south-1.compute.amazonaws.com:3000/api/employees/\"+this.state.edit_id,{\r\n        axios.put(\"http://localhost:3001/api/employees/\" + this.state.edit_id, {\r\n            name: this.state.name,\r\n            age: this.state.age,\r\n            salary: this.state.salary\r\n        }).then((res) => {\r\n            console.log('Record updated');\r\n            this.clearField();\r\n            this.getRecords();\r\n        })\r\n            .catch((err) => {\r\n                console.log('The today error is ', err);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Addemp update={this.updateRecord} add={(event) => this.save()} change={(event) => this.setFormName(event)} changeage={(event) => { this.setFormAge(event) }} changesal={(event) => this.setFormSalary(event)} name={this.state.name} age={this.state.age} salary={this.state.salary} stt={this.state.btn_stt} />\r\n                <table>\r\n                    <thead>\r\n                        <th>Name</th><th>Age</th><th>Salary</th><th>Action</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.employees.map((x, i) => {\r\n                                return (\r\n                                    <tr key={i}>\r\n                                        <td>\r\n                                            {x.name}\r\n                                        </td>\r\n                                        <td>\r\n                                            {x.age}\r\n                                        </td>\r\n                                        <td>\r\n                                            {x.salary}\r\n                                        </td>\r\n                                        <td>\r\n                                            <button onClick={() => this.deleteRecord(x._id)}>[-]</button> |\r\n<button onClick={() => this.editRecord(x)}>Edit</button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Employees;","import { jsxSpreadAttribute } from \"@babel/types\";\n\n\nconst iniCountState = {\n    count : 0\n}\n\nconst countReducer = (state=iniCountState,action)=>{\nif(action.type==\"INCR\"){\n    return {\n        count : state.count+1\n    }\n}\nif(action.type==\"ADD\"){\n    return {\n        count : state.count+action.value\n    }\n}\n    return state;\n}\n\nexport default countReducer;","\n\nconst iniSnapshotState = {\n    snapshot : []\n}\n\nconst snapshotReducer = (state=iniSnapshotState,action )=>{\n\nif(action.type=='SNAPSHOT'){\n    return {\n        snapshot : state.snapshot.concat({\n            dt : `==> ${new Date()} (${action.value})`\n        })   \n    }\n}\n    return state;\n}\n\nexport default snapshotReducer;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Counter1 extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                The count is {this.props.storeCount}<br>\r\n                </br>\r\n                <button onClick={this.props.onIncr}>++</button> |\r\n                <button onClick={this.props.onAdd}>ADD 5</button> |\r\n                <button onClick={() => this.props.takeSnapshot(this.props.storeCount)}>Take Snapshot</button>\r\n                <hr />\r\n                <ul>\r\n                    {\r\n                        this.props.storeSnapshot.map((x) => {\r\n                            return (\r\n                                <li>{x.dt}</li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        storeCount: state.storeCountReducer.count,\r\n        storeSnapshot: state.storeSnapshotReducer.snapshot\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onIncr: () => {\r\n            dispatch({ type: \"INCR\" })\r\n        },\r\n        onAdd: () => {\r\n            dispatch({ type: \"ADD\", value: 5 })\r\n        },\r\n        takeSnapshot: (count) => {\r\n            dispatch({ type: \"SNAPSHOT\", value: count })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter1);","import React,{Component} from 'react';\r\n\r\n\r\nconst Child1 = ()=>{\r\n    return (\r\n        <div>\r\n<h1>Inside child1</h1>\r\n<Child2/>\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\nconst Child2 = ()=>{\r\n    return (\r\n        <div>\r\n<h1>Inside final child2</h1>\r\nMessage from parent is \r\n<ParentContext.Consumer>\r\n{(data)=>data}\r\n</ParentContext.Consumer>\r\n            </div>\r\n    )\r\n}\r\n\r\nvar ParentContext = React.createContext();\r\nclass Parent extends Component{\r\n\r\nconstructor(){\r\n    super();\r\n    this.state = {\r\na : 100\r\n    };\r\n}\r\n\r\nrender(){\r\n    return (\r\n        <div>\r\n            <ParentContext.Provider value={this.state.a}>\r\n        <h1>Inside paret</h1>\r\n        <Child1/>\r\n        </ParentContext.Provider>\r\n        </div>\r\n    )\r\n}\r\n\r\n}\r\n\r\nexport default Parent;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n \r\nclass Runs extends Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Total run is {this.props.iruns}</h2>\r\n                <hr />\r\n                <button onClick={this.props.onIncrement}>Increment</button> |\r\n                <button onClick={this.props.onDecrement}>Decrement</button> |\r\n                <button onClick={this.props.onTwo}>Play 2</button> |\r\n                <button onClick={this.props.onFour}>Play 4</button> |\r\n                <button onClick={this.props.onSix}>Play 6</button> |\r\n                <button onClick={() => this.props.onCapture(this.props.iruns)}>Capture</button>\r\n                <hr />\r\n                <ul>\r\n                    {\r\n\r\n                        <ul>\r\n                            {this.props.results.map((result) => {\r\n                                return (\r\n                                    <li>\r\n                                        {result.time} : {result.current}\r\n                                    </li>\r\n                                )\r\n                            })\r\n\r\n                            }\r\n                        </ul>\r\n\r\n\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        iruns: state.mruns.runs,\r\n        results: state.mresults.results\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onIncrement: () => dispatch({ type: 'INCREMENT' }),\r\n        onDecrement: () => dispatch({ type: 'DECREMENT' }),\r\n        onTwo: () => dispatch({ type: 'AddTwo', val: 2 }),\r\n        onFour: () => dispatch({ type: 'AddFour', val: 4 }),\r\n        onSix: () => dispatch({ type: 'AddSix', val: 6 }),\r\n        onCapture: (iruns) => dispatch({ type: 'CAPTURE', val: iruns }) //here iruns is variable name. which can be anything\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Runs);","import React,{Component} from 'react';\nclass MyFragment extends Component{\nrender(){\n    return (\n    <React.Fragment>\n<h2>First</h2>\n<p>\n    We all are indians\n</p>\n</React.Fragment>\n    )\n}\n}\n\nexport default MyFragment;","import React, { Component } from 'react';\r\n\r\nconst MyTimeHOC = (OriginalComponent) => {\r\n\r\n    class UpdatedComponent extends Component {\r\n\r\n        constructor() {\r\n            super();\r\n            this.state = {\r\n                ct: new Date() + \"\",\r\n                cRef: {}\r\n            }\r\n        }\r\n\r\n        iniTime = () => {\r\n            var ref = setInterval(() => {\r\n                this.setState({\r\n                    ct: new Date() + \"\",\r\n                    cRef: ref\r\n                });\r\n            }, 1000);\r\n        }\r\n\r\n        cancelTime = () => {\r\n            clearInterval(this.state.cRef)\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <OriginalComponent cancel={this.cancelTime} ct={this.state.ct} in={this.iniTime} />\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n    return UpdatedComponent;\r\n\r\n}\r\n\r\nexport default MyTimeHOC;","import React from 'react';\r\nimport MyTimeHOC from './MyTimeHOC';\r\n// import { tsPropertySignature } from '@babel/types';\r\nconst DisplayTime = (props) => {\r\n    return (\r\n        <div>\r\n            The time is {props.ct}<hr />\r\n            <button onClick={props.in}>Start CountDown</button> |\r\n            <button onClick={props.cancel}>Stop CountDown</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyTimeHOC(DisplayTime);","import React, { Component } from 'react';\n\nclass MyBody extends Component {\n    \n    constructor() {\n        super();\n\n        this.state = {\n            informations: [\n                { name: \"Mohan\", age: 20, sal: 200 },\n                { name: \"Rohan\", age: 25, sal: 240 },\n                { name: \"Sohan\", age: 23, sal: 207 }\n            ]\n        }\n    }\n\n    render() {\n        return (<React.Fragment>\n            {/* <tbody>\n                <tr>\n                    <td>Mohan</td>\n                    <td>21</td>\n                    <td>200</td>\n                </tr>\n            </tbody> */}\n\n\n            <tbody>\n                <tr>\n                    <td>{this.state.informations[0].name}</td>\n                    <td>{this.state.informations[0].age}</td>\n                    <td>{this.state.informations[0].sal}</td>\n                </tr>\n                <tr>\n                    <td>{this.state.informations[1].name}</td>\n                    <td>{this.state.informations[1].age}</td>\n                    <td>{this.state.informations[1].sal}</td>\n                </tr>\n                <td>{this.state.informations[2].name}</td>\n                <td>{this.state.informations[2].age}</td>\n                <td>{this.state.informations[2].sal}</td>\n            </tbody>\n        </React.Fragment>)\n    }\n\n}\n\n\n\nexport default MyBody;","import React, { Component } from 'react';\r\n\r\nconst MatchHOC = (OriginalComponent) => {\r\n\r\n    class UpdatedComponent extends Component {\r\n\r\n        constructor() {\r\n            super();\r\n            this.state = {\r\n                four_runs: 0,\r\n                six_runs: 0,\r\n                total_runs: 0\r\n            }\r\n        }\r\n\r\n        makeFour = () => {\r\n\r\n            this.setState(preState => {\r\n                return {\r\n                    ...preState,\r\n                    four_runs: preState.four_runs + 1,\r\n                    total_runs: preState.total_runs + 4\r\n                }\r\n            })\r\n\r\n        }\r\n\r\n        makeSix = () => {\r\n\r\n            this.setState(preState => {\r\n                return {\r\n                    ...preState,\r\n                    six_runs: preState.six_runs + 1,\r\n                    total_runs: preState.total_runs + 6\r\n\r\n                }\r\n            })\r\n\r\n        }\r\n\r\n        render() {\r\n            return <OriginalComponent six_runs={this.state.six_runs} four_runs={this.state.four_runs}\r\n                total_runs={this.state.total_runs} four={this.makeFour} six={this.makeSix}></OriginalComponent>\r\n        }\r\n\r\n    }\r\n\r\n    return UpdatedComponent;\r\n}\r\n\r\nexport default MatchHOC;","import React, { Component } from 'react';\r\nimport MatchHOC from './MatchHOC';\r\n\r\n// const MumbaiIndians=(props)=>{\r\n//         return (\r\n//             <div>\r\n//                 <h2>The Four {props.four_runs}</h2>\r\n//                 <h2>The Six {props.six_runs}</h2>\r\n//                 <hr/>\r\n//                 <h1>Total runs is {props.total_runs}</h1>\r\n//                 <button onClick={props.four}>Four</button>\r\n//                 <button onClick={props.six}>Six</button>\r\n//             </div>\r\n//         )\r\n  \r\n// }\r\n\r\nclass MumbaiIndians extends Component{\r\n    render(){\r\n    return (\r\n        <div>\r\n            <h2>The Four {this.props.four_runs}</h2>\r\n            <h2>The Six {this.props.six_runs}</h2>\r\n            <hr/>\r\n            <h1>Total runs is {this.props.total_runs}</h1>\r\n            <button onClick={this.props.four}>Four</button>\r\n            <button onClick={this.props.six}>Six</button>\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\n\r\nexport default MatchHOC(MumbaiIndians);","import React,{Component} from 'react';\n\nclass MyHeader extends Component{\n\nrender(){\n    return (\n    <React.Fragment>\n        <thead>\n            <tr>\n        <th>Name</th><th>Age</th><th>Salary</th>\n        </tr>\n        </thead>\n    </React.Fragment>)\n}\n\n}\n\nexport default MyHeader;","import React,{Component} from 'react';\r\nimport MyBody from './MyBody';\r\nimport MyHeader from './MyHeader';\r\nclass MyTable extends Component{\r\n\r\nrender(){\r\n    return (<table>\r\n        <MyHeader/>\r\n        <MyBody/>\r\n    </table>)\r\n}\r\n\r\n}\r\n\r\n                   \r\n\r\nexport default MyTable;\r\n\r\n\r\n\r\n// import React, { Component } from 'react';\r\n\r\n\r\n// class MyTable extends Component {\r\n\r\n\r\n//     constructor() {\r\n//         super();\r\n\r\n//         this.state = {\r\n//             informations: [\r\n//                 { name: \"Mohan\", age: 20, sal: 200 },\r\n//                 { name: \"Rohan\", age: 25, sal: 240 },\r\n//                 { name: \"Sohan\", age: 23, sal: 207 }\r\n//             ]\r\n//         }\r\n//     }\r\n\r\n\r\n//     render() {\r\n//         return (\r\n//             <table>\r\n//                 <React.Fragment>\r\n//                     <thead>\r\n//                         <th>Name</th>\r\n//                         <th>Age</th>\r\n//                         <th>Salary</th>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         <tr>\r\n//                             <td>{this.state.informations[0].name}</td>\r\n//                             <td>{this.state.informations[0].age}</td>\r\n//                             <td>{this.state.informations[0].sal}</td>\r\n//                         </tr>\r\n//                         <tr>\r\n//                             <td>{this.state.informations[1].name}</td>\r\n//                             <td>{this.state.informations[1].age}</td>\r\n//                             <td>{this.state.informations[1].sal}</td>\r\n//                             </tr>\r\n//                             <td>{this.state.informations[2].name}</td>\r\n//                             <td>{this.state.informations[2].age}</td>\r\n//                             <td>{this.state.informations[2].sal}</td>\r\n                        \r\n\r\n//                     </tbody>\r\n\r\n//                 </React.Fragment>\r\n//             </table>\r\n//         )\r\n//     }\r\n\r\n// }\r\n\r\n// export default MyTable;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const INCREMENT = \"INCREMENT\";\r\nexport const DECREMENT = \"DECREMENT\";\r\nexport const AddTwo = \"AddTwo\";\r\nexport const AddFour = \"AddFour\";\r\nexport const AddSix = \"AddSix\";\r\nexport const CAPTURE = 'CAPTURE';","import * as actions from '../actions'\r\nvar initialState = {\r\n    runs: 0\r\n}\r\nvar runsReducer = (state = initialState, action) => {\r\n    if (action.type == actions.INCREMENT) {\r\n        return {\r\n            // results : state.results,\r\n            ...state, //spread operator\r\n            runs: state.runs + 1\r\n        }\r\n    }\r\n    if (action.type == actions.DECREMENT) {\r\n        return {\r\n            // results : state.results,\r\n            ...state,\r\n            runs: state.runs - 1\r\n        }\r\n    }\r\n    if (action.type == actions.AddTwo) {\r\n        return {\r\n            // results : state.results,\r\n            ...state,\r\n            runs: state.runs + action.val\r\n        }\r\n    }\r\n\r\n    if (action.type == actions.AddFour) {\r\n        return {\r\n            // results : state.results,\r\n            ...state,\r\n            runs: state.runs + action.val\r\n        }\r\n    }\r\n    if (action.type == actions.AddSix) {\r\n        return {\r\n            // results : state.results,\r\n            ...state,\r\n            runs: state.runs + action.val\r\n        }\r\n    }\r\n\r\n    return state;\r\n}\r\nexport default runsReducer;","import * as actions from '../actions';\r\nvar initialState = {\r\n   \r\n    results : []\r\n}\r\nvar resultsReducer = (state=initialState,action)=>{\r\n   \r\n    if(action.type==actions.CAPTURE){\r\n        return {\r\n            ...state,\r\n            results : state.results.concat({time : `${new Date()}`,current : action.val}),\r\n            // runs : state.runs\r\n        }\r\n    }\r\nreturn state;\r\n}\r\n\r\n\r\nexport default resultsReducer;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Usei = () => {\r\n    let [posts, updatePost] = useState([]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"Inside the use Effect\");\r\n\r\n        axios.get(\"https://jsonplaceholder.typicode.com/posts\").\r\n            then(\r\n                (res) => {\r\n                    console.log(\"The response is \", res.data);\r\n                    let newposts = posts.concat(res.data);\r\n                    console.log(\"The type of posts \", newposts);\r\n                    console.log(\"The new data is \", posts);\r\n                    updatePost(newposts);\r\n                }\r\n            )\r\n            .catch((err) => {\r\n                console.log(\"The err is \", err);\r\n            })\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ul>\r\n                The use effect session\r\n        {\r\n                    posts.map((post, i) =>{\r\n                        return <li key={i}> { post.title }</li>\r\n                    })\r\n\r\n           \r\n        }\r\n        </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Usei;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\n\n//import MyProd from './myprod';\n\nimport Cities from './Properties/Cities';\nimport School from './School';\nimport Mohantycondition from './Mohantycondition';\nimport Mohantylist from './Mohantylist';\nimport Mohantystyle from './Mohantystyle';\nimport Register from './Register';\nimport Mycondition2 from './Mycondition2';\nimport Mycondition from './Mycondition';\nimport Employees from './Components/Employees/Employees';\nimport Products1 from './Components/Products1/Products1';\nimport countReducer from './store/reducers/count.reducer';\nimport snapshotReducer from './store/reducers/snapshot.reducer';\nimport Counter1 from './Counter1';\nimport Parent from './Components/parent/Parent';\nimport axios from 'axios';\n\nimport MyFState from './MyFState';\nimport MyFragment from './MyFragment';\nimport Runs from './Components/runs/Runs';\nimport DisplayTime from './DisplayTime';\n\nimport MumbaiIndians from './MumbaiIndians';\n\nimport MyTable from './MyTable';\n//import Employees from './Properties/Employees';\nimport * as serviceWorker from './serviceWorker';\n// import Playerlist from './Players/Playerlist';\n// import Counter from './Counter';\nimport runsReducer from './store/reducers/runs.reducer';\nimport resultsReducer from './store/reducers/results.reducer';\nimport REffect from './REffect';\nimport Cricket from './Cricket';\nimport Cricket2 from './Cricket2';\nimport Employee from './Employee';\nimport MyTest from './MYTest';\nimport Counterhk from './Counterhk';\nimport Usei from './Usei';\n\nlet mergeReducer = combineReducers({\n    storeCountReducer: countReducer,\n    storeSnapshotReducer: snapshotReducer\n})\nlet store = createStore(mergeReducer);\n\nlet reducer = combineReducers({\n    mruns: runsReducer,\n    mresults: resultsReducer\n});\n//var store = createStore(reducer);\n\n\n// var initialState = {\n//     runs:0\n// }\n\n// var rootReducer= (state=initialState,action)=>{\n//     if(action.type=='INCREMENT'){\n//         return{\n//             runs: state.runs + 1\n//         }\n//     }\n\n//     if(action.type=='DECREMENT'){\n//         return{\n//             runs: state.runs - 1\n//         }\n//     }\n\n//     if(action.type=='AddFour'){\n//         return{\n//             runs: state.runs + action.val\n//         }\n//     }\n\n//     if(action.type=='AddSix'){\n//         return{\n//             runs: state.runs + action.val\n//         }\n//     }\n\n//     return state;\n// }\n\n//var store= createStore(rootReducer);\n\n// let initState = {\n//     count: 0\n// }\n\n// let rootReducer = function (state = initState, action) \n// { //initState is default parameter\n\n//     switch (action.type) {\n//         case 'INCREMENT':\n//             return {\n//                 count: state.count + 1\n//             }\n//         case 'DECREMENT':\n//             return {\n//                 count: state.count - 1\n//             }\n//         case 'ADD':\n//             return {\n//                 count: state.count + action.value\n//             }\n\n//     if (action.type == 'INCREMENT') {\n//         return {\n//             count: state.count + 1\n//         }\n//     }\n//     if (action.type == 'DECREMENT') {\n//         return {\n//             count: state.count - 1\n//         }\n//     }\n//     if (action.type == 'ADD') {\n//         return {\n//             count: state.count + action.value\n//         }\n//     }\n\n//     return state;\n//     }\n\n// }\n//     // import employeeReducer from './store/employee.reducer';\n//     // let store = createStore(employeeReducer);\n//     // ReactDOM.render(<Provider store={store}><Employee/></Provider>)\n\n\n//     // var store = createStore(rootReducer);\n\n//     const store = createStore(rootReducer);//takes reducer as input\n//     ReactDOM.render(<Provider store={store}><Counter /></Provider>, document.getElementById('root'));\n\n// axios.defaults.headers.common['MyToken'] = \"123sujeet\";\n// axios.interceptors.request.use((req) => {\n//     console.log('Inside the interceptor');\n//     return req;\n// })\n\n// axios.interceptors.response.use((res) => {\n//     console.log('The response is ', res);\n//     return res;\n// })\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n//ReactDOM.render(<MyTable />, document.getElementById('root'));\nReactDOM.render(<Usei />, document.getElementById('root'));\n//ReactDOM.render(<Provider store={store}><Counter1 /></Provider>, document.getElementById('root'));\n\n//ReactDOM.render(<Provider store={store}><Runs/></Provider>, document.getElementById('root'));\n\n//ReactDOM.render(<Provider store={store}><Runs/></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}